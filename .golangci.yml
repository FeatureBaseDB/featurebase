run:
  #skip the protobuf generated files
  timeout: 3m
  skip-dirs-use-default: true
  skip-dirs:
    - pb
    - proto
  skip-files:
    - pql/pql.peg.go
linters:
  enable:
    - govet
    - gofmt
  enable-all: false
  disable-all: true

output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: tab
  # print lines of code with issue, default is true
  print-issued-lines: true
  # print linter name in the end of issue text, default is true
  print-linter-name: true

linters-settings:
  gofmt:
    simplify: true
  govet:
    # report about shadowed variables
    check-shadowing: true


    # settings per analyzer
    settings:
      printf: # analyzer name, run `go tool vet help` to see all analyzers
        funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf

    # enable or disable analyzers by name
    # run `go tool vet help` to see all analyzers
    enable:
      - atomicalign
    enable-all: false
    disable:
      - shadow
    disable-all: false


issues:
  exclude-use-default: false
  max-per-linter: 0
  max-same: 0
  exclude-rules:
    - linters:
      - gofmt
      text: "File is not `gofmt`-ed with `-s`"
  exclude:
    -  'declaration of "(err|ctx)" shadows declaration at'
    -  'typecheck'
