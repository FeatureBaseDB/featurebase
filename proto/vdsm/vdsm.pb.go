// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vdsm/vdsm.proto

package vdsm

import (
	context "context"
	fmt "fmt"
	proto1 "github.com/featurebasedb/featurebase/v3/proto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// deprecated
type DataSource struct {
	Id                   int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Type                 string            `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Config               map[string]string `protobuf:"bytes,5,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status               string            `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DataSource) Reset()         { *m = DataSource{} }
func (m *DataSource) String() string { return proto.CompactTextString(m) }
func (*DataSource) ProtoMessage()    {}
func (*DataSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{0}
}

func (m *DataSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSource.Unmarshal(m, b)
}
func (m *DataSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSource.Marshal(b, m, deterministic)
}
func (m *DataSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSource.Merge(m, src)
}
func (m *DataSource) XXX_Size() int {
	return xxx_messageInfo_DataSource.Size(m)
}
func (m *DataSource) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSource.DiscardUnknown(m)
}

var xxx_messageInfo_DataSource proto.InternalMessageInfo

func (m *DataSource) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DataSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DataSource) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DataSource) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DataSource) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *DataSource) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type VDS struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PilosaIndex          string        `protobuf:"bytes,4,opt,name=pilosa_index,json=pilosaIndex,proto3" json:"pilosa_index,omitempty"`
	Datasources          []*DataSource `protobuf:"bytes,5,rep,name=datasources,proto3" json:"datasources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *VDS) Reset()         { *m = VDS{} }
func (m *VDS) String() string { return proto.CompactTextString(m) }
func (*VDS) ProtoMessage()    {}
func (*VDS) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{1}
}

func (m *VDS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VDS.Unmarshal(m, b)
}
func (m *VDS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VDS.Marshal(b, m, deterministic)
}
func (m *VDS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VDS.Merge(m, src)
}
func (m *VDS) XXX_Size() int {
	return xxx_messageInfo_VDS.Size(m)
}
func (m *VDS) XXX_DiscardUnknown() {
	xxx_messageInfo_VDS.DiscardUnknown(m)
}

var xxx_messageInfo_VDS proto.InternalMessageInfo

func (m *VDS) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VDS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VDS) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VDS) GetPilosaIndex() string {
	if m != nil {
		return m.PilosaIndex
	}
	return ""
}

func (m *VDS) GetDatasources() []*DataSource {
	if m != nil {
		return m.Datasources
	}
	return nil
}

type GetVDSsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVDSsRequest) Reset()         { *m = GetVDSsRequest{} }
func (m *GetVDSsRequest) String() string { return proto.CompactTextString(m) }
func (*GetVDSsRequest) ProtoMessage()    {}
func (*GetVDSsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{2}
}

func (m *GetVDSsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVDSsRequest.Unmarshal(m, b)
}
func (m *GetVDSsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVDSsRequest.Marshal(b, m, deterministic)
}
func (m *GetVDSsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVDSsRequest.Merge(m, src)
}
func (m *GetVDSsRequest) XXX_Size() int {
	return xxx_messageInfo_GetVDSsRequest.Size(m)
}
func (m *GetVDSsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVDSsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVDSsRequest proto.InternalMessageInfo

type GetVDSsResponse struct {
	Vdss                 []*VDS   `protobuf:"bytes,1,rep,name=vdss,proto3" json:"vdss,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVDSsResponse) Reset()         { *m = GetVDSsResponse{} }
func (m *GetVDSsResponse) String() string { return proto.CompactTextString(m) }
func (*GetVDSsResponse) ProtoMessage()    {}
func (*GetVDSsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{3}
}

func (m *GetVDSsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVDSsResponse.Unmarshal(m, b)
}
func (m *GetVDSsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVDSsResponse.Marshal(b, m, deterministic)
}
func (m *GetVDSsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVDSsResponse.Merge(m, src)
}
func (m *GetVDSsResponse) XXX_Size() int {
	return xxx_messageInfo_GetVDSsResponse.Size(m)
}
func (m *GetVDSsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVDSsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVDSsResponse proto.InternalMessageInfo

func (m *GetVDSsResponse) GetVdss() []*VDS {
	if m != nil {
		return m.Vdss
	}
	return nil
}

type GetVDSRequest struct {
	// Types that are valid to be assigned to IdOrName:
	//	*GetVDSRequest_Id
	//	*GetVDSRequest_Name
	IdOrName             isGetVDSRequest_IdOrName `protobuf_oneof:"idOrName"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GetVDSRequest) Reset()         { *m = GetVDSRequest{} }
func (m *GetVDSRequest) String() string { return proto.CompactTextString(m) }
func (*GetVDSRequest) ProtoMessage()    {}
func (*GetVDSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{4}
}

func (m *GetVDSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVDSRequest.Unmarshal(m, b)
}
func (m *GetVDSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVDSRequest.Marshal(b, m, deterministic)
}
func (m *GetVDSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVDSRequest.Merge(m, src)
}
func (m *GetVDSRequest) XXX_Size() int {
	return xxx_messageInfo_GetVDSRequest.Size(m)
}
func (m *GetVDSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVDSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVDSRequest proto.InternalMessageInfo

type isGetVDSRequest_IdOrName interface {
	isGetVDSRequest_IdOrName()
}

type GetVDSRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type GetVDSRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*GetVDSRequest_Id) isGetVDSRequest_IdOrName() {}

func (*GetVDSRequest_Name) isGetVDSRequest_IdOrName() {}

func (m *GetVDSRequest) GetIdOrName() isGetVDSRequest_IdOrName {
	if m != nil {
		return m.IdOrName
	}
	return nil
}

func (m *GetVDSRequest) GetId() string {
	if x, ok := m.GetIdOrName().(*GetVDSRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *GetVDSRequest) GetName() string {
	if x, ok := m.GetIdOrName().(*GetVDSRequest_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetVDSRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetVDSRequest_Id)(nil),
		(*GetVDSRequest_Name)(nil),
	}
}

type GetVDSResponse struct {
	Vds                  *VDS     `protobuf:"bytes,1,opt,name=vds,proto3" json:"vds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVDSResponse) Reset()         { *m = GetVDSResponse{} }
func (m *GetVDSResponse) String() string { return proto.CompactTextString(m) }
func (*GetVDSResponse) ProtoMessage()    {}
func (*GetVDSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{5}
}

func (m *GetVDSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVDSResponse.Unmarshal(m, b)
}
func (m *GetVDSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVDSResponse.Marshal(b, m, deterministic)
}
func (m *GetVDSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVDSResponse.Merge(m, src)
}
func (m *GetVDSResponse) XXX_Size() int {
	return xxx_messageInfo_GetVDSResponse.Size(m)
}
func (m *GetVDSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVDSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVDSResponse proto.InternalMessageInfo

func (m *GetVDSResponse) GetVds() *VDS {
	if m != nil {
		return m.Vds
	}
	return nil
}

type PostVDSRequest struct {
	Definition           string   `protobuf:"bytes,1,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostVDSRequest) Reset()         { *m = PostVDSRequest{} }
func (m *PostVDSRequest) String() string { return proto.CompactTextString(m) }
func (*PostVDSRequest) ProtoMessage()    {}
func (*PostVDSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{6}
}

func (m *PostVDSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostVDSRequest.Unmarshal(m, b)
}
func (m *PostVDSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostVDSRequest.Marshal(b, m, deterministic)
}
func (m *PostVDSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostVDSRequest.Merge(m, src)
}
func (m *PostVDSRequest) XXX_Size() int {
	return xxx_messageInfo_PostVDSRequest.Size(m)
}
func (m *PostVDSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PostVDSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PostVDSRequest proto.InternalMessageInfo

func (m *PostVDSRequest) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

type PostVDSResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uri                  string   `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostVDSResponse) Reset()         { *m = PostVDSResponse{} }
func (m *PostVDSResponse) String() string { return proto.CompactTextString(m) }
func (*PostVDSResponse) ProtoMessage()    {}
func (*PostVDSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{7}
}

func (m *PostVDSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostVDSResponse.Unmarshal(m, b)
}
func (m *PostVDSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostVDSResponse.Marshal(b, m, deterministic)
}
func (m *PostVDSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostVDSResponse.Merge(m, src)
}
func (m *PostVDSResponse) XXX_Size() int {
	return xxx_messageInfo_PostVDSResponse.Size(m)
}
func (m *PostVDSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PostVDSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PostVDSResponse proto.InternalMessageInfo

func (m *PostVDSResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PostVDSResponse) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type DeleteVDSRequest struct {
	// Types that are valid to be assigned to IdOrName:
	//	*DeleteVDSRequest_Id
	//	*DeleteVDSRequest_Name
	IdOrName             isDeleteVDSRequest_IdOrName `protobuf_oneof:"idOrName"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DeleteVDSRequest) Reset()         { *m = DeleteVDSRequest{} }
func (m *DeleteVDSRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVDSRequest) ProtoMessage()    {}
func (*DeleteVDSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{8}
}

func (m *DeleteVDSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVDSRequest.Unmarshal(m, b)
}
func (m *DeleteVDSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVDSRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVDSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVDSRequest.Merge(m, src)
}
func (m *DeleteVDSRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVDSRequest.Size(m)
}
func (m *DeleteVDSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVDSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVDSRequest proto.InternalMessageInfo

type isDeleteVDSRequest_IdOrName interface {
	isDeleteVDSRequest_IdOrName()
}

type DeleteVDSRequest_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type DeleteVDSRequest_Name struct {
	Name string `protobuf:"bytes,2,opt,name=name,proto3,oneof"`
}

func (*DeleteVDSRequest_Id) isDeleteVDSRequest_IdOrName() {}

func (*DeleteVDSRequest_Name) isDeleteVDSRequest_IdOrName() {}

func (m *DeleteVDSRequest) GetIdOrName() isDeleteVDSRequest_IdOrName {
	if m != nil {
		return m.IdOrName
	}
	return nil
}

func (m *DeleteVDSRequest) GetId() string {
	if x, ok := m.GetIdOrName().(*DeleteVDSRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (m *DeleteVDSRequest) GetName() string {
	if x, ok := m.GetIdOrName().(*DeleteVDSRequest_Name); ok {
		return x.Name
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DeleteVDSRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DeleteVDSRequest_Id)(nil),
		(*DeleteVDSRequest_Name)(nil),
	}
}

type DeleteVDSResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVDSResponse) Reset()         { *m = DeleteVDSResponse{} }
func (m *DeleteVDSResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVDSResponse) ProtoMessage()    {}
func (*DeleteVDSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{9}
}

func (m *DeleteVDSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVDSResponse.Unmarshal(m, b)
}
func (m *DeleteVDSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVDSResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVDSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVDSResponse.Merge(m, src)
}
func (m *DeleteVDSResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVDSResponse.Size(m)
}
func (m *DeleteVDSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVDSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVDSResponse proto.InternalMessageInfo

// copied from pilosa.proto to use "vds" instead of "index"
type QueryPQLRequest struct {
	Vds                  string   `protobuf:"bytes,1,opt,name=vds,proto3" json:"vds,omitempty"`
	Pql                  string   `protobuf:"bytes,2,opt,name=pql,proto3" json:"pql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryPQLRequest) Reset()         { *m = QueryPQLRequest{} }
func (m *QueryPQLRequest) String() string { return proto.CompactTextString(m) }
func (*QueryPQLRequest) ProtoMessage()    {}
func (*QueryPQLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{10}
}

func (m *QueryPQLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryPQLRequest.Unmarshal(m, b)
}
func (m *QueryPQLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryPQLRequest.Marshal(b, m, deterministic)
}
func (m *QueryPQLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryPQLRequest.Merge(m, src)
}
func (m *QueryPQLRequest) XXX_Size() int {
	return xxx_messageInfo_QueryPQLRequest.Size(m)
}
func (m *QueryPQLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryPQLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryPQLRequest proto.InternalMessageInfo

func (m *QueryPQLRequest) GetVds() string {
	if m != nil {
		return m.Vds
	}
	return ""
}

func (m *QueryPQLRequest) GetPql() string {
	if m != nil {
		return m.Pql
	}
	return ""
}

// copied from pilosa.proto to use "vds" instead of "index" and "records" instead of "columns"
type InspectRequest struct {
	Vds                  string            `protobuf:"bytes,1,opt,name=vds,proto3" json:"vds,omitempty"`
	Records              *proto1.IdsOrKeys `protobuf:"bytes,2,opt,name=records,proto3" json:"records,omitempty"`
	FilterFields         []string          `protobuf:"bytes,3,rep,name=filterFields,proto3" json:"filterFields,omitempty"`
	Limit                uint64            `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               uint64            `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Query                string            `protobuf:"bytes,6,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InspectRequest) Reset()         { *m = InspectRequest{} }
func (m *InspectRequest) String() string { return proto.CompactTextString(m) }
func (*InspectRequest) ProtoMessage()    {}
func (*InspectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3849c3e549495f50, []int{11}
}

func (m *InspectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InspectRequest.Unmarshal(m, b)
}
func (m *InspectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InspectRequest.Marshal(b, m, deterministic)
}
func (m *InspectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InspectRequest.Merge(m, src)
}
func (m *InspectRequest) XXX_Size() int {
	return xxx_messageInfo_InspectRequest.Size(m)
}
func (m *InspectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InspectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InspectRequest proto.InternalMessageInfo

func (m *InspectRequest) GetVds() string {
	if m != nil {
		return m.Vds
	}
	return ""
}

func (m *InspectRequest) GetRecords() *proto1.IdsOrKeys {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *InspectRequest) GetFilterFields() []string {
	if m != nil {
		return m.FilterFields
	}
	return nil
}

func (m *InspectRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *InspectRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *InspectRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func init() {
	proto.RegisterType((*DataSource)(nil), "vdsm.DataSource")
	proto.RegisterMapType((map[string]string)(nil), "vdsm.DataSource.ConfigEntry")
	proto.RegisterType((*VDS)(nil), "vdsm.VDS")
	proto.RegisterType((*GetVDSsRequest)(nil), "vdsm.GetVDSsRequest")
	proto.RegisterType((*GetVDSsResponse)(nil), "vdsm.GetVDSsResponse")
	proto.RegisterType((*GetVDSRequest)(nil), "vdsm.GetVDSRequest")
	proto.RegisterType((*GetVDSResponse)(nil), "vdsm.GetVDSResponse")
	proto.RegisterType((*PostVDSRequest)(nil), "vdsm.PostVDSRequest")
	proto.RegisterType((*PostVDSResponse)(nil), "vdsm.PostVDSResponse")
	proto.RegisterType((*DeleteVDSRequest)(nil), "vdsm.DeleteVDSRequest")
	proto.RegisterType((*DeleteVDSResponse)(nil), "vdsm.DeleteVDSResponse")
	proto.RegisterType((*QueryPQLRequest)(nil), "vdsm.QueryPQLRequest")
	proto.RegisterType((*InspectRequest)(nil), "vdsm.InspectRequest")
}

func init() {
	proto.RegisterFile("vdsm/vdsm.proto", fileDescriptor_3849c3e549495f50)
}

var fileDescriptor_3849c3e549495f50 = []byte{
	// 719 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x6e, 0xda, 0x4c,
	0x14, 0xc5, 0x98, 0x40, 0xb8, 0x24, 0x40, 0x26, 0x24, 0xb1, 0xf8, 0x7e, 0xc4, 0xe7, 0xc5, 0x27,
	0xa4, 0xaa, 0x24, 0x22, 0x8d, 0x44, 0xa3, 0xaa, 0x55, 0x13, 0x9a, 0x26, 0x6a, 0xda, 0x80, 0x69,
	0xb3, 0xe8, 0xa6, 0x72, 0xf0, 0x90, 0x8e, 0x6a, 0x6c, 0xe3, 0x19, 0xd3, 0xf2, 0x3a, 0xdd, 0x77,
	0xdd, 0xc7, 0xea, 0x2b, 0x54, 0xf3, 0x07, 0x86, 0x8a, 0x55, 0x36, 0x30, 0x73, 0xe6, 0xde, 0x7b,
	0xee, 0x99, 0x7b, 0x46, 0x86, 0xca, 0xd4, 0xa3, 0xe3, 0x43, 0xfe, 0xd3, 0x8a, 0xe2, 0x90, 0x85,
	0x28, 0xc7, 0xd7, 0xf5, 0xad, 0x88, 0xf8, 0x21, 0x75, 0x25, 0x66, 0xff, 0x32, 0x00, 0xba, 0x2e,
	0x73, 0x07, 0x61, 0x12, 0x0f, 0x31, 0x2a, 0x43, 0x96, 0x78, 0x96, 0xd1, 0x30, 0x9a, 0xa6, 0x93,
	0x25, 0x1e, 0x42, 0x90, 0x0b, 0xdc, 0x31, 0xb6, 0xb2, 0x0d, 0xa3, 0x59, 0x74, 0xc4, 0x1a, 0x35,
	0xa0, 0xe4, 0x61, 0x3a, 0x8c, 0x49, 0xc4, 0x48, 0x18, 0x58, 0xa6, 0x38, 0x4a, 0x43, 0x3c, 0x8b,
	0xcd, 0x22, 0x6c, 0xe5, 0x64, 0x16, 0x5f, 0xa3, 0x27, 0x90, 0x1f, 0x86, 0xc1, 0x88, 0xdc, 0x5b,
	0x1b, 0x0d, 0xb3, 0x59, 0x6a, 0xff, 0xdd, 0x12, 0x9d, 0x2d, 0xb8, 0x5b, 0xe7, 0xe2, 0xf8, 0x55,
	0xc0, 0xe2, 0x99, 0xa3, 0x62, 0xd1, 0x3e, 0xe4, 0x29, 0x73, 0x59, 0x42, 0xad, 0xbc, 0xa8, 0xa5,
	0x76, 0xf5, 0xa7, 0x50, 0x4a, 0x85, 0xa3, 0x2a, 0x98, 0x5f, 0xf0, 0x4c, 0xf4, 0x5d, 0x74, 0xf8,
	0x12, 0xd5, 0x60, 0x63, 0xea, 0xfa, 0x89, 0xee, 0x5c, 0x6e, 0x4e, 0xb3, 0x1d, 0xc3, 0xfe, 0x6e,
	0x80, 0x79, 0xdb, 0x1d, 0xa4, 0xa4, 0x16, 0x1f, 0x20, 0xf5, 0x3f, 0x50, 0xf7, 0xf9, 0x89, 0x04,
	0x1e, 0xfe, 0xa6, 0x24, 0x97, 0x24, 0x76, 0xc5, 0x21, 0xd4, 0x86, 0x92, 0xe7, 0x32, 0x97, 0x0a,
	0x95, 0x54, 0xc9, 0xaf, 0xae, 0xca, 0x77, 0xd2, 0x41, 0x76, 0x15, 0xca, 0xaf, 0x31, 0xbb, 0xed,
	0x0e, 0xa8, 0x83, 0x27, 0x09, 0xa6, 0xcc, 0x3e, 0x82, 0xca, 0x1c, 0xa1, 0x51, 0x18, 0x50, 0x8c,
	0xfe, 0x01, 0x3e, 0x51, 0x6a, 0x19, 0xa2, 0x62, 0x51, 0x56, 0xbc, 0xed, 0x0e, 0x1c, 0x01, 0xdb,
	0xe7, 0xb0, 0x2d, 0x33, 0x54, 0x09, 0x54, 0x5d, 0x28, 0xbe, 0xcc, 0x08, 0xcd, 0xb5, 0xb4, 0xe6,
	0xcb, 0x8c, 0x54, 0x7d, 0x06, 0xb0, 0x49, 0xbc, 0x9b, 0xf8, 0x9d, 0x3b, 0xc6, 0xf6, 0x63, 0xdd,
	0xc8, 0x9c, 0xf5, 0x2f, 0x30, 0xa7, 0x1e, 0x15, 0x65, 0x96, 0x48, 0x39, 0x6a, 0x1f, 0x41, 0xb9,
	0x17, 0xd2, 0x34, 0xe9, 0xbf, 0x00, 0x1e, 0x1e, 0x91, 0x80, 0x88, 0x1b, 0x94, 0xd7, 0x9d, 0x42,
	0xec, 0x63, 0xa8, 0xcc, 0x33, 0x14, 0xc3, 0xea, 0x64, 0xaa, 0x60, 0x26, 0x31, 0x51, 0x83, 0xe1,
	0x4b, 0xfb, 0x02, 0xaa, 0x5d, 0xec, 0x63, 0x86, 0x1f, 0xa8, 0x6e, 0x17, 0x76, 0x52, 0x75, 0x24,
	0xbd, 0x7d, 0x02, 0x95, 0x7e, 0x82, 0xe3, 0x59, 0xaf, 0x7f, 0xbd, 0xa8, 0x3d, 0xd7, 0x5c, 0x14,
	0x42, 0x39, 0x12, 0x4d, 0x7c, 0xdd, 0x53, 0x34, 0xf1, 0xed, 0x9f, 0x06, 0x94, 0xaf, 0x02, 0x1a,
	0xe1, 0x21, 0x5b, 0x9f, 0xf6, 0x08, 0x0a, 0x31, 0x1e, 0x86, 0xb1, 0x47, 0x45, 0x6a, 0xa9, 0xbd,
	0xd3, 0x52, 0xcf, 0xf1, 0xca, 0xa3, 0x37, 0xf1, 0x1b, 0x3c, 0xa3, 0x8e, 0x8e, 0x40, 0x36, 0x6c,
	0x8d, 0x88, 0xcf, 0x70, 0x7c, 0x41, 0xb0, 0xef, 0x51, 0xcb, 0x6c, 0x98, 0xcd, 0xa2, 0xb3, 0x84,
	0x71, 0x9f, 0xfb, 0x64, 0x4c, 0x98, 0x30, 0x5e, 0xce, 0x91, 0x1b, 0xfe, 0x6c, 0xc2, 0xd1, 0x88,
	0x62, 0x66, 0x6d, 0x08, 0x58, 0xed, 0x78, 0xf4, 0x84, 0x4b, 0x53, 0xaf, 0x49, 0x6e, 0xda, 0x3f,
	0x72, 0xb0, 0xf9, 0x36, 0xf4, 0xf1, 0x30, 0xf1, 0x5d, 0xd4, 0x81, 0x82, 0xf2, 0x19, 0xaa, 0xc9,
	0xe1, 0x2e, 0x1b, 0xb1, 0xbe, 0xb7, 0x82, 0xaa, 0x5b, 0xcb, 0xa0, 0x13, 0xc8, 0x4b, 0x10, 0xed,
	0xa6, 0x43, 0x74, 0x5e, 0x6d, 0x19, 0x9c, 0xa7, 0x75, 0xa0, 0xa0, 0x0c, 0xa0, 0x09, 0x97, 0x1d,
	0xa4, 0x09, 0x57, 0x5c, 0x62, 0x67, 0xd0, 0x73, 0x28, 0xce, 0xa7, 0x87, 0xf6, 0xd5, 0x83, 0x5a,
	0xb1, 0x45, 0xfd, 0xe0, 0x0f, 0x7c, 0x9e, 0xff, 0x0c, 0x36, 0xc5, 0xa0, 0x07, 0xfd, 0x6b, 0x74,
	0xa0, 0xe7, 0xa0, 0x11, 0x9d, 0xbf, 0xab, 0x0f, 0x9c, 0xf0, 0xeb, 0x22, 0xf7, 0xc8, 0x40, 0x2f,
	0x61, 0x5b, 0xc7, 0x7e, 0x08, 0xdc, 0x78, 0xb6, 0xbe, 0xc4, 0x9e, 0x3e, 0x78, 0xef, 0xde, 0xf9,
	0x38, 0xd5, 0xc0, 0xa9, 0x6a, 0xa0, 0xd7, 0xbf, 0x46, 0x4a, 0xe5, 0x8a, 0xf3, 0xd6, 0xd3, 0xbf,
	0x50, 0xf4, 0x3d, 0x4d, 0xbf, 0xa6, 0xc0, 0x5a, 0xf2, 0x0e, 0x14, 0x94, 0x5d, 0xf5, 0xbd, 0x2f,
	0xbb, 0x77, 0x2d, 0xf5, 0x59, 0xf3, 0xe3, 0xff, 0xf7, 0x84, 0x7d, 0x4e, 0xee, 0x5a, 0xc3, 0x70,
	0x7c, 0x28, 0x83, 0xf4, 0xdf, 0xb4, 0x7d, 0x28, 0x3e, 0x2c, 0xe2, 0xbb, 0x73, 0x97, 0x17, 0xeb,
	0xe3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x63, 0x8c, 0x6a, 0x8b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MoleculaClient is the client API for Molecula service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MoleculaClient interface {
	GetVDSs(ctx context.Context, in *GetVDSsRequest, opts ...grpc.CallOption) (*GetVDSsResponse, error)
	GetVDS(ctx context.Context, in *GetVDSRequest, opts ...grpc.CallOption) (*GetVDSResponse, error)
	PostVDS(ctx context.Context, in *PostVDSRequest, opts ...grpc.CallOption) (*PostVDSResponse, error)
	DeleteVDS(ctx context.Context, in *DeleteVDSRequest, opts ...grpc.CallOption) (*DeleteVDSResponse, error)
	QuerySQL(ctx context.Context, in *proto1.QuerySQLRequest, opts ...grpc.CallOption) (Molecula_QuerySQLClient, error)
	QuerySQLUnary(ctx context.Context, in *proto1.QuerySQLRequest, opts ...grpc.CallOption) (*proto1.TableResponse, error)
	QueryPQL(ctx context.Context, in *QueryPQLRequest, opts ...grpc.CallOption) (Molecula_QueryPQLClient, error)
	QueryPQLUnary(ctx context.Context, in *QueryPQLRequest, opts ...grpc.CallOption) (*proto1.TableResponse, error)
	Inspect(ctx context.Context, in *InspectRequest, opts ...grpc.CallOption) (Molecula_InspectClient, error)
}

type moleculaClient struct {
	cc grpc.ClientConnInterface
}

func NewMoleculaClient(cc grpc.ClientConnInterface) MoleculaClient {
	return &moleculaClient{cc}
}

func (c *moleculaClient) GetVDSs(ctx context.Context, in *GetVDSsRequest, opts ...grpc.CallOption) (*GetVDSsResponse, error) {
	out := new(GetVDSsResponse)
	err := c.cc.Invoke(ctx, "/vdsm.Molecula/GetVDSs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moleculaClient) GetVDS(ctx context.Context, in *GetVDSRequest, opts ...grpc.CallOption) (*GetVDSResponse, error) {
	out := new(GetVDSResponse)
	err := c.cc.Invoke(ctx, "/vdsm.Molecula/GetVDS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moleculaClient) PostVDS(ctx context.Context, in *PostVDSRequest, opts ...grpc.CallOption) (*PostVDSResponse, error) {
	out := new(PostVDSResponse)
	err := c.cc.Invoke(ctx, "/vdsm.Molecula/PostVDS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moleculaClient) DeleteVDS(ctx context.Context, in *DeleteVDSRequest, opts ...grpc.CallOption) (*DeleteVDSResponse, error) {
	out := new(DeleteVDSResponse)
	err := c.cc.Invoke(ctx, "/vdsm.Molecula/DeleteVDS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moleculaClient) QuerySQL(ctx context.Context, in *proto1.QuerySQLRequest, opts ...grpc.CallOption) (Molecula_QuerySQLClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Molecula_serviceDesc.Streams[0], "/vdsm.Molecula/QuerySQL", opts...)
	if err != nil {
		return nil, err
	}
	x := &moleculaQuerySQLClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Molecula_QuerySQLClient interface {
	Recv() (*proto1.RowResponse, error)
	grpc.ClientStream
}

type moleculaQuerySQLClient struct {
	grpc.ClientStream
}

func (x *moleculaQuerySQLClient) Recv() (*proto1.RowResponse, error) {
	m := new(proto1.RowResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *moleculaClient) QuerySQLUnary(ctx context.Context, in *proto1.QuerySQLRequest, opts ...grpc.CallOption) (*proto1.TableResponse, error) {
	out := new(proto1.TableResponse)
	err := c.cc.Invoke(ctx, "/vdsm.Molecula/QuerySQLUnary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moleculaClient) QueryPQL(ctx context.Context, in *QueryPQLRequest, opts ...grpc.CallOption) (Molecula_QueryPQLClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Molecula_serviceDesc.Streams[1], "/vdsm.Molecula/QueryPQL", opts...)
	if err != nil {
		return nil, err
	}
	x := &moleculaQueryPQLClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Molecula_QueryPQLClient interface {
	Recv() (*proto1.RowResponse, error)
	grpc.ClientStream
}

type moleculaQueryPQLClient struct {
	grpc.ClientStream
}

func (x *moleculaQueryPQLClient) Recv() (*proto1.RowResponse, error) {
	m := new(proto1.RowResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *moleculaClient) QueryPQLUnary(ctx context.Context, in *QueryPQLRequest, opts ...grpc.CallOption) (*proto1.TableResponse, error) {
	out := new(proto1.TableResponse)
	err := c.cc.Invoke(ctx, "/vdsm.Molecula/QueryPQLUnary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moleculaClient) Inspect(ctx context.Context, in *InspectRequest, opts ...grpc.CallOption) (Molecula_InspectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Molecula_serviceDesc.Streams[2], "/vdsm.Molecula/Inspect", opts...)
	if err != nil {
		return nil, err
	}
	x := &moleculaInspectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Molecula_InspectClient interface {
	Recv() (*proto1.RowResponse, error)
	grpc.ClientStream
}

type moleculaInspectClient struct {
	grpc.ClientStream
}

func (x *moleculaInspectClient) Recv() (*proto1.RowResponse, error) {
	m := new(proto1.RowResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MoleculaServer is the server API for Molecula service.
type MoleculaServer interface {
	GetVDSs(context.Context, *GetVDSsRequest) (*GetVDSsResponse, error)
	GetVDS(context.Context, *GetVDSRequest) (*GetVDSResponse, error)
	PostVDS(context.Context, *PostVDSRequest) (*PostVDSResponse, error)
	DeleteVDS(context.Context, *DeleteVDSRequest) (*DeleteVDSResponse, error)
	QuerySQL(*proto1.QuerySQLRequest, Molecula_QuerySQLServer) error
	QuerySQLUnary(context.Context, *proto1.QuerySQLRequest) (*proto1.TableResponse, error)
	QueryPQL(*QueryPQLRequest, Molecula_QueryPQLServer) error
	QueryPQLUnary(context.Context, *QueryPQLRequest) (*proto1.TableResponse, error)
	Inspect(*InspectRequest, Molecula_InspectServer) error
}

// UnimplementedMoleculaServer can be embedded to have forward compatible implementations.
type UnimplementedMoleculaServer struct {
}

func (*UnimplementedMoleculaServer) GetVDSs(ctx context.Context, req *GetVDSsRequest) (*GetVDSsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVDSs not implemented")
}
func (*UnimplementedMoleculaServer) GetVDS(ctx context.Context, req *GetVDSRequest) (*GetVDSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVDS not implemented")
}
func (*UnimplementedMoleculaServer) PostVDS(ctx context.Context, req *PostVDSRequest) (*PostVDSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostVDS not implemented")
}
func (*UnimplementedMoleculaServer) DeleteVDS(ctx context.Context, req *DeleteVDSRequest) (*DeleteVDSResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVDS not implemented")
}
func (*UnimplementedMoleculaServer) QuerySQL(req *proto1.QuerySQLRequest, srv Molecula_QuerySQLServer) error {
	return status.Errorf(codes.Unimplemented, "method QuerySQL not implemented")
}
func (*UnimplementedMoleculaServer) QuerySQLUnary(ctx context.Context, req *proto1.QuerySQLRequest) (*proto1.TableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySQLUnary not implemented")
}
func (*UnimplementedMoleculaServer) QueryPQL(req *QueryPQLRequest, srv Molecula_QueryPQLServer) error {
	return status.Errorf(codes.Unimplemented, "method QueryPQL not implemented")
}
func (*UnimplementedMoleculaServer) QueryPQLUnary(ctx context.Context, req *QueryPQLRequest) (*proto1.TableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPQLUnary not implemented")
}
func (*UnimplementedMoleculaServer) Inspect(req *InspectRequest, srv Molecula_InspectServer) error {
	return status.Errorf(codes.Unimplemented, "method Inspect not implemented")
}

func RegisterMoleculaServer(s *grpc.Server, srv MoleculaServer) {
	s.RegisterService(&_Molecula_serviceDesc, srv)
}

func _Molecula_GetVDSs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVDSsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoleculaServer).GetVDSs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vdsm.Molecula/GetVDSs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoleculaServer).GetVDSs(ctx, req.(*GetVDSsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Molecula_GetVDS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVDSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoleculaServer).GetVDS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vdsm.Molecula/GetVDS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoleculaServer).GetVDS(ctx, req.(*GetVDSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Molecula_PostVDS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostVDSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoleculaServer).PostVDS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vdsm.Molecula/PostVDS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoleculaServer).PostVDS(ctx, req.(*PostVDSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Molecula_DeleteVDS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVDSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoleculaServer).DeleteVDS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vdsm.Molecula/DeleteVDS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoleculaServer).DeleteVDS(ctx, req.(*DeleteVDSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Molecula_QuerySQL_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(proto1.QuerySQLRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MoleculaServer).QuerySQL(m, &moleculaQuerySQLServer{stream})
}

type Molecula_QuerySQLServer interface {
	Send(*proto1.RowResponse) error
	grpc.ServerStream
}

type moleculaQuerySQLServer struct {
	grpc.ServerStream
}

func (x *moleculaQuerySQLServer) Send(m *proto1.RowResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Molecula_QuerySQLUnary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(proto1.QuerySQLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoleculaServer).QuerySQLUnary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vdsm.Molecula/QuerySQLUnary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoleculaServer).QuerySQLUnary(ctx, req.(*proto1.QuerySQLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Molecula_QueryPQL_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(QueryPQLRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MoleculaServer).QueryPQL(m, &moleculaQueryPQLServer{stream})
}

type Molecula_QueryPQLServer interface {
	Send(*proto1.RowResponse) error
	grpc.ServerStream
}

type moleculaQueryPQLServer struct {
	grpc.ServerStream
}

func (x *moleculaQueryPQLServer) Send(m *proto1.RowResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Molecula_QueryPQLUnary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryPQLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MoleculaServer).QueryPQLUnary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vdsm.Molecula/QueryPQLUnary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MoleculaServer).QueryPQLUnary(ctx, req.(*QueryPQLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Molecula_Inspect_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(InspectRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MoleculaServer).Inspect(m, &moleculaInspectServer{stream})
}

type Molecula_InspectServer interface {
	Send(*proto1.RowResponse) error
	grpc.ServerStream
}

type moleculaInspectServer struct {
	grpc.ServerStream
}

func (x *moleculaInspectServer) Send(m *proto1.RowResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Molecula_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vdsm.Molecula",
	HandlerType: (*MoleculaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVDSs",
			Handler:    _Molecula_GetVDSs_Handler,
		},
		{
			MethodName: "GetVDS",
			Handler:    _Molecula_GetVDS_Handler,
		},
		{
			MethodName: "PostVDS",
			Handler:    _Molecula_PostVDS_Handler,
		},
		{
			MethodName: "DeleteVDS",
			Handler:    _Molecula_DeleteVDS_Handler,
		},
		{
			MethodName: "QuerySQLUnary",
			Handler:    _Molecula_QuerySQLUnary_Handler,
		},
		{
			MethodName: "QueryPQLUnary",
			Handler:    _Molecula_QueryPQLUnary_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QuerySQL",
			Handler:       _Molecula_QuerySQL_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "QueryPQL",
			Handler:       _Molecula_QueryPQL_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Inspect",
			Handler:       _Molecula_Inspect_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "vdsm/vdsm.proto",
}
