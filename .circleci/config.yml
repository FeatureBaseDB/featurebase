version: 2
defaults: &defaults
  working_directory: /go/src/github.com/pilosa/pilosa
  docker:
    - image: circleci/golang:1.11
  environment:
    GO111MODULE: "on"
fast-checkout: &fast-checkout
  attach_workspace:
    at: .
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - mod-cache-{{ checksum "go.sum" }}
      - run: "go mod download"
      - save_cache:
          key: mod-cache-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod/
      - persist_to_workspace:
          root: .
          paths: "*"
  linter:
    <<: *defaults
    steps:
      - *fast-checkout
      - run: go get -u github.com/alecthomas/gometalinter
      - run: gometalinter --install
      - run: go get github.com/remyoudompheng/go-misc/deadcode
      - run: make gometalinter
    environment: {} # unset GO111MODULE (breaks metalinter install for some reason)
  staticcheck:
    <<: *defaults
    steps:
      - *fast-checkout
      - run: go get honnef.co/go/tools@f1b53a58b022
      - run: staticcheck
  test-golang-1.11: &base-test
    <<: *defaults
    steps:
      - *fast-checkout
      - run: sudo apt-get install lsof
      - run: make test
  test-golang-1.11-386:
    <<: *base-test
    environment:
      GO111MODULE: "on"
      GOARCH: 386
  prerelease:
    <<: *base-test
    steps:
      - *fast-checkout
      - run: make prerelease
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths: build
  release:
    <<: *defaults
    steps:
      - *fast-checkout
      - run: make release
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths: build
  prerelease-upload:
    docker:
      - image: circleci/python:2.7-jessie
    steps:
      - run: '[[ -v CIRCLE_PR_NUMBER ]] && circleci step halt || true' # Skip job if this is a PR
      - *fast-checkout
      - run: sudo pip install awscli
      - run: make prerelease-upload
  dockerhub-upload:
    <<: *defaults
    steps:
      - run: '[[ -v CIRCLE_PR_NUMBER ]] && circleci step halt || true' # Skip job if this is a PR
      - *fast-checkout
      - setup_remote_docker
      - run: make docker
      - run: docker tag pilosa:$(git describe --tags) pilosa/pilosa:master
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push pilosa/pilosa:master
workflows:
  version: 2
  test:
    jobs:
      - build
      - linter:
          requires:
            - build
      - staticcheck:
          requires:
            - build
      - test-golang-1.11:
          requires:
            - build
      - test-golang-1.11-386:
          requires:
            - build
      - prerelease:
          requires:
            - linter
            - staticcheck
            - test-golang-1.11
      - release:
          requires:
            - linter
            - test-golang-1.11
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - prerelease-upload:
          requires:
            - prerelease
      - dockerhub-upload:
          requires:
            - linter
            - test-golang-1.10
