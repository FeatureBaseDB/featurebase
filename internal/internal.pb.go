// Code generated by protoc-gen-go.
// source: internal.proto
// DO NOT EDIT!

/*
Package internal is a generated protocol buffer package.

It is generated from these files:
	internal.proto

It has these top-level messages:
	DB
	Frame
	Bitmap
	Pair
	Bit
	Profile
	Attr
	AttrMap
	QueryRequest
	QueryResponse
	QueryResult
	ImportRequest
	ImportResponse
	BlockDataRequest
	BlockDataResponse
	Cache
	MaxSlicesResponse
*/
package internal

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DB struct {
	TimeQuantum string `protobuf:"bytes,1,opt,name=TimeQuantum" json:"TimeQuantum,omitempty"`
}

func (m *DB) Reset()                    { *m = DB{} }
func (m *DB) String() string            { return proto.CompactTextString(m) }
func (*DB) ProtoMessage()               {}
func (*DB) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DB) GetTimeQuantum() string {
	if m != nil {
		return m.TimeQuantum
	}
	return ""
}

type Frame struct {
	TimeQuantum string `protobuf:"bytes,1,opt,name=TimeQuantum" json:"TimeQuantum,omitempty"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Frame) GetTimeQuantum() string {
	if m != nil {
		return m.TimeQuantum
	}
	return ""
}

type Bitmap struct {
	Bits  []uint64 `protobuf:"varint,1,rep,packed,name=Bits" json:"Bits,omitempty"`
	Attrs []*Attr  `protobuf:"bytes,2,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Bitmap) Reset()                    { *m = Bitmap{} }
func (m *Bitmap) String() string            { return proto.CompactTextString(m) }
func (*Bitmap) ProtoMessage()               {}
func (*Bitmap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Bitmap) GetBits() []uint64 {
	if m != nil {
		return m.Bits
	}
	return nil
}

func (m *Bitmap) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type Pair struct {
	Key   uint64 `protobuf:"varint,1,opt,name=Key" json:"Key,omitempty"`
	Count uint64 `protobuf:"varint,2,opt,name=Count" json:"Count,omitempty"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Pair) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *Pair) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Bit struct {
	BitmapID  uint64 `protobuf:"varint,1,opt,name=BitmapID" json:"BitmapID,omitempty"`
	ProfileID uint64 `protobuf:"varint,2,opt,name=ProfileID" json:"ProfileID,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=Timestamp" json:"Timestamp,omitempty"`
}

func (m *Bit) Reset()                    { *m = Bit{} }
func (m *Bit) String() string            { return proto.CompactTextString(m) }
func (*Bit) ProtoMessage()               {}
func (*Bit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Bit) GetBitmapID() uint64 {
	if m != nil {
		return m.BitmapID
	}
	return 0
}

func (m *Bit) GetProfileID() uint64 {
	if m != nil {
		return m.ProfileID
	}
	return 0
}

func (m *Bit) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Profile struct {
	ID    uint64  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Attrs []*Attr `protobuf:"bytes,2,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Profile) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Profile) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type Attr struct {
	Key         string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Type        uint64 `protobuf:"varint,2,opt,name=Type" json:"Type,omitempty"`
	StringValue string `protobuf:"bytes,3,opt,name=StringValue" json:"StringValue,omitempty"`
	UintValue   uint64 `protobuf:"varint,4,opt,name=UintValue" json:"UintValue,omitempty"`
	BoolValue   bool   `protobuf:"varint,5,opt,name=BoolValue" json:"BoolValue,omitempty"`
}

func (m *Attr) Reset()                    { *m = Attr{} }
func (m *Attr) String() string            { return proto.CompactTextString(m) }
func (*Attr) ProtoMessage()               {}
func (*Attr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Attr) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Attr) GetType() uint64 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *Attr) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Attr) GetUintValue() uint64 {
	if m != nil {
		return m.UintValue
	}
	return 0
}

func (m *Attr) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

type AttrMap struct {
	Attrs []*Attr `protobuf:"bytes,1,rep,name=Attrs" json:"Attrs,omitempty"`
}

func (m *AttrMap) Reset()                    { *m = AttrMap{} }
func (m *AttrMap) String() string            { return proto.CompactTextString(m) }
func (*AttrMap) ProtoMessage()               {}
func (*AttrMap) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AttrMap) GetAttrs() []*Attr {
	if m != nil {
		return m.Attrs
	}
	return nil
}

type QueryRequest struct {
	DB       string   `protobuf:"bytes,1,opt,name=DB" json:"DB,omitempty"`
	Query    string   `protobuf:"bytes,2,opt,name=Query" json:"Query,omitempty"`
	Slices   []uint64 `protobuf:"varint,3,rep,packed,name=Slices" json:"Slices,omitempty"`
	Profiles bool     `protobuf:"varint,4,opt,name=Profiles" json:"Profiles,omitempty"`
	Quantum  string   `protobuf:"bytes,5,opt,name=Quantum" json:"Quantum,omitempty"`
	Remote   bool     `protobuf:"varint,6,opt,name=Remote" json:"Remote,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *QueryRequest) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *QueryRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *QueryRequest) GetSlices() []uint64 {
	if m != nil {
		return m.Slices
	}
	return nil
}

func (m *QueryRequest) GetProfiles() bool {
	if m != nil {
		return m.Profiles
	}
	return false
}

func (m *QueryRequest) GetQuantum() string {
	if m != nil {
		return m.Quantum
	}
	return ""
}

func (m *QueryRequest) GetRemote() bool {
	if m != nil {
		return m.Remote
	}
	return false
}

type QueryResponse struct {
	Err      string         `protobuf:"bytes,1,opt,name=Err" json:"Err,omitempty"`
	Results  []*QueryResult `protobuf:"bytes,2,rep,name=Results" json:"Results,omitempty"`
	Profiles []*Profile     `protobuf:"bytes,3,rep,name=Profiles" json:"Profiles,omitempty"`
}

func (m *QueryResponse) Reset()                    { *m = QueryResponse{} }
func (m *QueryResponse) String() string            { return proto.CompactTextString(m) }
func (*QueryResponse) ProtoMessage()               {}
func (*QueryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *QueryResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *QueryResponse) GetResults() []*QueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *QueryResponse) GetProfiles() []*Profile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

type QueryResult struct {
	Bitmap  *Bitmap `protobuf:"bytes,1,opt,name=Bitmap" json:"Bitmap,omitempty"`
	N       uint64  `protobuf:"varint,2,opt,name=N" json:"N,omitempty"`
	Pairs   []*Pair `protobuf:"bytes,3,rep,name=Pairs" json:"Pairs,omitempty"`
	Changed bool    `protobuf:"varint,4,opt,name=Changed" json:"Changed,omitempty"`
}

func (m *QueryResult) Reset()                    { *m = QueryResult{} }
func (m *QueryResult) String() string            { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()               {}
func (*QueryResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *QueryResult) GetBitmap() *Bitmap {
	if m != nil {
		return m.Bitmap
	}
	return nil
}

func (m *QueryResult) GetN() uint64 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *QueryResult) GetPairs() []*Pair {
	if m != nil {
		return m.Pairs
	}
	return nil
}

func (m *QueryResult) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

type ImportRequest struct {
	DB         string   `protobuf:"bytes,1,opt,name=DB" json:"DB,omitempty"`
	Frame      string   `protobuf:"bytes,2,opt,name=Frame" json:"Frame,omitempty"`
	Slice      uint64   `protobuf:"varint,3,opt,name=Slice" json:"Slice,omitempty"`
	BitmapIDs  []uint64 `protobuf:"varint,4,rep,packed,name=BitmapIDs" json:"BitmapIDs,omitempty"`
	ProfileIDs []uint64 `protobuf:"varint,5,rep,packed,name=ProfileIDs" json:"ProfileIDs,omitempty"`
	Timestamps []int64  `protobuf:"varint,6,rep,packed,name=Timestamps" json:"Timestamps,omitempty"`
}

func (m *ImportRequest) Reset()                    { *m = ImportRequest{} }
func (m *ImportRequest) String() string            { return proto.CompactTextString(m) }
func (*ImportRequest) ProtoMessage()               {}
func (*ImportRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ImportRequest) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *ImportRequest) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *ImportRequest) GetSlice() uint64 {
	if m != nil {
		return m.Slice
	}
	return 0
}

func (m *ImportRequest) GetBitmapIDs() []uint64 {
	if m != nil {
		return m.BitmapIDs
	}
	return nil
}

func (m *ImportRequest) GetProfileIDs() []uint64 {
	if m != nil {
		return m.ProfileIDs
	}
	return nil
}

func (m *ImportRequest) GetTimestamps() []int64 {
	if m != nil {
		return m.Timestamps
	}
	return nil
}

type ImportResponse struct {
	Err string `protobuf:"bytes,1,opt,name=Err" json:"Err,omitempty"`
}

func (m *ImportResponse) Reset()                    { *m = ImportResponse{} }
func (m *ImportResponse) String() string            { return proto.CompactTextString(m) }
func (*ImportResponse) ProtoMessage()               {}
func (*ImportResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ImportResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type BlockDataRequest struct {
	DB    string `protobuf:"bytes,1,opt,name=DB" json:"DB,omitempty"`
	Frame string `protobuf:"bytes,2,opt,name=Frame" json:"Frame,omitempty"`
	Slice uint64 `protobuf:"varint,3,opt,name=Slice" json:"Slice,omitempty"`
	Block uint64 `protobuf:"varint,4,opt,name=Block" json:"Block,omitempty"`
}

func (m *BlockDataRequest) Reset()                    { *m = BlockDataRequest{} }
func (m *BlockDataRequest) String() string            { return proto.CompactTextString(m) }
func (*BlockDataRequest) ProtoMessage()               {}
func (*BlockDataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *BlockDataRequest) GetDB() string {
	if m != nil {
		return m.DB
	}
	return ""
}

func (m *BlockDataRequest) GetFrame() string {
	if m != nil {
		return m.Frame
	}
	return ""
}

func (m *BlockDataRequest) GetSlice() uint64 {
	if m != nil {
		return m.Slice
	}
	return 0
}

func (m *BlockDataRequest) GetBlock() uint64 {
	if m != nil {
		return m.Block
	}
	return 0
}

type BlockDataResponse struct {
	BitmapIDs  []uint64 `protobuf:"varint,1,rep,packed,name=BitmapIDs" json:"BitmapIDs,omitempty"`
	ProfileIDs []uint64 `protobuf:"varint,2,rep,packed,name=ProfileIDs" json:"ProfileIDs,omitempty"`
}

func (m *BlockDataResponse) Reset()                    { *m = BlockDataResponse{} }
func (m *BlockDataResponse) String() string            { return proto.CompactTextString(m) }
func (*BlockDataResponse) ProtoMessage()               {}
func (*BlockDataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *BlockDataResponse) GetBitmapIDs() []uint64 {
	if m != nil {
		return m.BitmapIDs
	}
	return nil
}

func (m *BlockDataResponse) GetProfileIDs() []uint64 {
	if m != nil {
		return m.ProfileIDs
	}
	return nil
}

type Cache struct {
	BitmapIDs []uint64 `protobuf:"varint,1,rep,packed,name=BitmapIDs" json:"BitmapIDs,omitempty"`
}

func (m *Cache) Reset()                    { *m = Cache{} }
func (m *Cache) String() string            { return proto.CompactTextString(m) }
func (*Cache) ProtoMessage()               {}
func (*Cache) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *Cache) GetBitmapIDs() []uint64 {
	if m != nil {
		return m.BitmapIDs
	}
	return nil
}

type MaxSlicesResponse struct {
	MaxSlices map[string]uint64 `protobuf:"bytes,1,rep,name=MaxSlices" json:"MaxSlices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
}

func (m *MaxSlicesResponse) Reset()                    { *m = MaxSlicesResponse{} }
func (m *MaxSlicesResponse) String() string            { return proto.CompactTextString(m) }
func (*MaxSlicesResponse) ProtoMessage()               {}
func (*MaxSlicesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MaxSlicesResponse) GetMaxSlices() map[string]uint64 {
	if m != nil {
		return m.MaxSlices
	}
	return nil
}

func init() {
	proto.RegisterType((*DB)(nil), "internal.DB")
	proto.RegisterType((*Frame)(nil), "internal.Frame")
	proto.RegisterType((*Bitmap)(nil), "internal.Bitmap")
	proto.RegisterType((*Pair)(nil), "internal.Pair")
	proto.RegisterType((*Bit)(nil), "internal.Bit")
	proto.RegisterType((*Profile)(nil), "internal.Profile")
	proto.RegisterType((*Attr)(nil), "internal.Attr")
	proto.RegisterType((*AttrMap)(nil), "internal.AttrMap")
	proto.RegisterType((*QueryRequest)(nil), "internal.QueryRequest")
	proto.RegisterType((*QueryResponse)(nil), "internal.QueryResponse")
	proto.RegisterType((*QueryResult)(nil), "internal.QueryResult")
	proto.RegisterType((*ImportRequest)(nil), "internal.ImportRequest")
	proto.RegisterType((*ImportResponse)(nil), "internal.ImportResponse")
	proto.RegisterType((*BlockDataRequest)(nil), "internal.BlockDataRequest")
	proto.RegisterType((*BlockDataResponse)(nil), "internal.BlockDataResponse")
	proto.RegisterType((*Cache)(nil), "internal.Cache")
	proto.RegisterType((*MaxSlicesResponse)(nil), "internal.MaxSlicesResponse")
}

func init() { proto.RegisterFile("internal.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x55, 0xcb, 0x6a, 0x14, 0x4d,
	0x14, 0xa6, 0xfa, 0x32, 0x97, 0x33, 0xc9, 0x90, 0x14, 0xf3, 0xff, 0x34, 0x41, 0xa4, 0x29, 0x54,
	0x5a, 0xc1, 0x04, 0xe2, 0x46, 0x44, 0x10, 0x3b, 0x13, 0x71, 0x90, 0x84, 0xa4, 0x12, 0xdd, 0xb9,
	0x68, 0x93, 0x32, 0x69, 0xd2, 0x37, 0xab, 0xab, 0xc5, 0x59, 0xba, 0x70, 0xe3, 0x23, 0xe8, 0x13,
	0xf8, 0x96, 0x52, 0x97, 0xee, 0xea, 0x28, 0x8e, 0x59, 0xb8, 0xeb, 0xf3, 0x9d, 0x3a, 0xa7, 0xbe,
	0xef, 0x5c, 0xaa, 0x61, 0x9a, 0x16, 0x82, 0xf1, 0x22, 0xc9, 0xb6, 0x2b, 0x5e, 0x8a, 0x12, 0x8f,
	0x5a, 0x9b, 0xdc, 0x03, 0x67, 0x1e, 0xe3, 0x10, 0x26, 0xa7, 0x69, 0xce, 0x8e, 0x9b, 0xa4, 0x10,
	0x4d, 0x1e, 0xa0, 0x10, 0x45, 0x63, 0xda, 0x87, 0xc8, 0x7d, 0xf0, 0x5f, 0xf0, 0x24, 0x67, 0x37,
	0x38, 0x1a, 0xc3, 0x20, 0x4e, 0x45, 0x9e, 0x54, 0x18, 0x83, 0x17, 0xa7, 0xa2, 0x0e, 0x50, 0xe8,
	0x46, 0x1e, 0x55, 0xdf, 0xf8, 0x0e, 0xf8, 0xcf, 0x85, 0xe0, 0x75, 0xe0, 0x84, 0x6e, 0x34, 0xd9,
	0x9d, 0x6e, 0x77, 0xd4, 0x24, 0x4c, 0xb5, 0x93, 0x6c, 0x83, 0x77, 0x94, 0xa4, 0x1c, 0x6f, 0x80,
	0xfb, 0x8a, 0x2d, 0xd5, 0x2d, 0x1e, 0x95, 0x9f, 0x78, 0x06, 0xfe, 0x5e, 0xd9, 0x14, 0x22, 0x70,
	0x14, 0xa6, 0x0d, 0xf2, 0x16, 0xdc, 0x38, 0x15, 0x78, 0x0b, 0x46, 0xfa, 0xea, 0xc5, 0xdc, 0xc4,
	0x74, 0x36, 0xbe, 0x05, 0xe3, 0x23, 0x5e, 0xbe, 0x4f, 0x33, 0xb6, 0x98, 0x9b, 0x60, 0x0b, 0x48,
	0xaf, 0xd4, 0x50, 0x8b, 0x24, 0xaf, 0x02, 0x37, 0x44, 0x91, 0x4b, 0x2d, 0x40, 0x9e, 0xc1, 0xd0,
	0x1c, 0xc5, 0x53, 0x70, 0xba, 0xe4, 0xce, 0x62, 0x7e, 0x43, 0x3d, 0x5f, 0x11, 0x78, 0xf2, 0xab,
	0x2f, 0x68, 0xac, 0x05, 0x61, 0xf0, 0x4e, 0x97, 0x15, 0x33, 0x94, 0xd4, 0xb7, 0x2c, 0xf2, 0x89,
	0xe0, 0x69, 0x71, 0xf1, 0x26, 0xc9, 0x1a, 0xa6, 0xf8, 0x8c, 0x69, 0x1f, 0x92, 0x7c, 0x5f, 0xa7,
	0x85, 0xd0, 0x7e, 0x4f, 0xab, 0xe9, 0x00, 0xe9, 0x8d, 0xcb, 0x32, 0xd3, 0x5e, 0x3f, 0x44, 0xd1,
	0x88, 0x5a, 0x80, 0xec, 0xc0, 0x50, 0x72, 0x39, 0x48, 0x2a, 0xcb, 0x1e, 0xad, 0x62, 0xff, 0x0d,
	0xc1, 0xda, 0x71, 0xc3, 0xf8, 0x92, 0xb2, 0x0f, 0x0d, 0xab, 0x85, 0x2c, 0xc2, 0x3c, 0x36, 0x22,
	0xe4, 0xfc, 0xcc, 0xc0, 0x57, 0x7e, 0x25, 0x62, 0x4c, 0xb5, 0x81, 0xff, 0x87, 0xc1, 0x49, 0x96,
	0x9e, 0xb1, 0x3a, 0x70, 0xd5, 0x00, 0x18, 0x4b, 0x76, 0xc9, 0x54, 0xb3, 0x56, 0xd4, 0x47, 0xb4,
	0xb3, 0x71, 0x00, 0xc3, 0x76, 0xb4, 0x7c, 0x95, 0xab, 0x35, 0x65, 0x36, 0xca, 0xf2, 0x52, 0xb0,
	0x60, 0xa0, 0x62, 0x8c, 0x45, 0x3e, 0x23, 0x58, 0x37, 0xe4, 0xea, 0xaa, 0x2c, 0x6a, 0x26, 0x6b,
	0xbc, 0xcf, 0x79, 0x5b, 0xe3, 0x7d, 0xce, 0xf1, 0x0e, 0x0c, 0x29, 0xab, 0x9b, 0x4c, 0xb4, 0x6d,
	0xfa, 0xcf, 0x0a, 0x6d, 0x63, 0x9b, 0x4c, 0xd0, 0xf6, 0x14, 0x7e, 0xd8, 0xa3, 0xe8, 0xaa, 0x88,
	0x4d, 0x1b, 0x61, 0x3c, 0x96, 0x35, 0xf9, 0x82, 0x60, 0xd2, 0xcb, 0x83, 0xa3, 0x76, 0x05, 0x14,
	0x89, 0xc9, 0xee, 0x86, 0x0d, 0xd6, 0x38, 0x6d, 0x57, 0x64, 0x0d, 0xd0, 0xa1, 0x69, 0x3d, 0x3a,
	0x94, 0xed, 0x90, 0x63, 0xdf, 0xde, 0xd9, 0x6b, 0x87, 0x84, 0xa9, 0x76, 0xca, 0x1a, 0xed, 0x5d,
	0x26, 0xc5, 0x05, 0x3b, 0x37, 0xe5, 0x6b, 0x4d, 0xf2, 0x03, 0xc1, 0xfa, 0x22, 0xaf, 0x4a, 0x2e,
	0x56, 0x74, 0x4a, 0xed, 0x71, 0xdb, 0x29, 0xbd, 0xd4, 0x33, 0xf0, 0x55, 0x6f, 0xd4, 0xa4, 0x79,
	0x54, 0x1b, 0x6a, 0x8a, 0xcc, 0xf6, 0xc8, 0x46, 0xc9, 0x16, 0x5a, 0x00, 0xdf, 0x06, 0xe8, 0xd6,
	0xa7, 0x0e, 0x7c, 0xe5, 0xee, 0x21, 0xd2, 0xdf, 0x2d, 0x50, 0x1d, 0x0c, 0x42, 0x37, 0x72, 0x69,
	0x0f, 0x21, 0x04, 0xa6, 0x2d, 0xd5, 0x3f, 0xf5, 0x8d, 0x9c, 0xc3, 0x46, 0x9c, 0x95, 0x67, 0x57,
	0xf3, 0x44, 0x24, 0xff, 0x42, 0xd1, 0x0c, 0x7c, 0x95, 0xcf, 0x6c, 0x8c, 0x36, 0xc8, 0x31, 0x6c,
	0xf6, 0x6e, 0x31, 0x64, 0xae, 0x89, 0x47, 0xab, 0xc5, 0x3b, 0xbf, 0x8a, 0x27, 0x77, 0xc1, 0xdf,
	0x4b, 0xce, 0x2e, 0xff, 0x92, 0x86, 0x7c, 0x47, 0xb0, 0x79, 0x90, 0x7c, 0xd2, 0x7b, 0xd1, 0x5d,
	0xfd, 0x12, 0xc6, 0x1d, 0x68, 0x16, 0xf3, 0x81, 0x9d, 0x84, 0xdf, 0xce, 0x5b, 0x64, 0xbf, 0x10,
	0x7c, 0x49, 0x6d, 0xf0, 0xd6, 0x53, 0x98, 0x5e, 0x77, 0xca, 0x1a, 0x5f, 0xd9, 0xf7, 0xe7, 0x4a,
	0x3f, 0xa8, 0x1f, 0xd5, 0x3b, 0x61, 0x1e, 0x54, 0x65, 0x3c, 0x71, 0x1e, 0xa3, 0x77, 0x03, 0xf5,
	0xb3, 0x78, 0xf4, 0x33, 0x00, 0x00, 0xff, 0xff, 0x52, 0x09, 0x63, 0x99, 0x3e, 0x06, 0x00, 0x00,
}
